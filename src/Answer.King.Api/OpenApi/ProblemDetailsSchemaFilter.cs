using System.Text.Json;
using System.Text.Json.Serialization;
using Microsoft.OpenApi.Any;
using Microsoft.OpenApi.Models;
using Swashbuckle.AspNetCore.SwaggerGen;

namespace Answer.King.Api.OpenApi;

public class ProblemDetailsSchemaFilter : ISchemaFilter
{
    public void Apply(OpenApiSchema schema, SchemaFilterContext context)
    {
        if (context.Type != typeof(Microsoft.AspNetCore.Mvc.ProblemDetails))
        {
            return;
        }

        var serializerOptions = new JsonSerializerOptions
        {
            WriteIndented = true,
            PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
            DefaultIgnoreCondition = JsonIgnoreCondition.WhenWritingNull
        };

        var exampleProblemDetails = new ProblemDetails
        {
            Type = "https://tools.ietf.org/html/rfc7231#section-6.5.4",
            Title = "Not Found",
            Status = 404,
            TraceId = "00-a8e9d236fdfee89c8cdca00651758241-1fea62c8c664390b-00"
        };

        var example = JsonSerializer.Serialize(
            exampleProblemDetails,
            typeof(ProblemDetails),
            serializerOptions);

        schema.Example = new OpenApiString(example);

        schema.Properties["type"].Description =
            @"A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when
            dereferenced, it provide human-readable documentation for the problem type
            (e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be
            'about:blank'.";
        schema.Properties["type"].Nullable = false;

        schema.Properties["title"].Description =
            @"A short, human-readable summary of the problem type.It SHOULD NOT change from occurrence to occurrence
            of the problem, except for purposes of localization(e.g., using proactive content negotiation;
            see[RFC7231], Section 3.4).";
        schema.Properties["title"].Nullable = false;

        schema.Properties["status"].Description =
            "The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.";
        schema.Properties["status"].Nullable = false;

        schema.Properties["detail"].Description =
            "A human-readable explanation specific to this occurrence of the problem.";
        schema.Properties["detail"].Nullable = true;

        schema.Properties["instance"].Description =
            "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.";
        schema.Properties["instance"].Nullable = true;

        var traceId = new OpenApiSchema
        {
            Type = "string",
            Description = "A unique identifier to represent this request in trace logs.",
            Nullable = false
        };

        schema.Properties.Add("traceId", traceId);
    }
}

internal class ProblemDetails
{
    public string? Type { get; set; }

    public string? Title { get; set; }

    public string? Detail { get; set; }

    public int Status { get; set; }

    public string? TraceId { get; set; }
}
